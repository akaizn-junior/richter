{"version":3,"sources":["webpack://Richter/webpack/universalModuleDefinition","webpack://Richter/webpack/bootstrap","webpack://Richter/./src/Richter.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Richter","settings","arguments","length","undefined","_classCallCheck","this","makeDOM","refElement","build","_SSpageAutoSave","enableSS","richter","document","getElementById","createEditor","attachTo","createElement","id","appendChild","richterToolbar","richterPage","contentEditable","setAttribute","style","createToolbar","createToolbarButtons","createToolbarMenus","_this","buttonsBox","toolbarTools","buttons","forEach","button","btn","innerHTML","text","charAt","toLowerCase","title","onclick","formatDocument","command","_this2","menusBox","menus","tool","toolMenu","defaultOption","selected","disabled","innerText","header","values","option","onchange","selectedIndex","richterConfirm","console","log","printPage","execCommand","print","sName","sValue","sessionStorage","setItem","getItem","_this3","oninput","_SSsaveState","_SSread","_SSpage","_SSgetState","message","btn1Label","btn2Label","confirmBox","classList","add","body","confirmBoxBtns","children","btn1","btn2","ret"],"mappings":"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","file":"richter.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Richter\"] = factory();\n\telse\n\t\troot[\"Richter\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// *******************************\n// Rich Te/xt Edito/r - Richter\n// *******************************\n\n//The toolbar tools defined separately\nimport toolbarTools from './toolbar-tools.json';\n\nexport default class Richter {\n    /**\n     * Richter - Rich Te/xt Edito/r\n     * @author Simao Nziaka\n     * @version 0.1.0\n     * @constructor\n     * @param {object} settings Editor settings. Empty by default\n     */\n    constructor(settings={}) {\n        /**\n         * Create richter in the DOM and attach it to a given existing element\n         */\n        if(settings.makeDOM && true) {\n            this.makeDOM(settings.refElement);\n        }\n\n        //build richter with an existing div#richter by default\n        this.build();\n\n        //enable/disable Session Storage - its enabled by default\n        this._SSpageAutoSave(settings.enableSS);\n    }\n\n    /**\n     * Build Richter based on an existing div#richter element\n     */\n    build() {\n        //grab the element with an id of richter\n        let richter = document.getElementById('richter');\n        this.createEditor(richter);\n    }\n\n    /**\n     * Make Richter in the DOM and attach it to a given element\n     * @param {string} attachTo The element to attach the newly created div#richter\n     */\n    makeDOM(attachTo) {\n        let richter = document.createElement('div');\n        richter.id = 'richter';\n        this.createEditor(richter);\n        //finally if there is a reference element attach the editor to it\n        let refElement = document.getElementById(attachTo);\n        refElement.appendChild(richter);\n    }\n\n    // ***************************\n    //    CREATE ELEMENTS\n    // ***************************\n\n    /**\n     * Append all the other components (toolbar, page) to Richter\n     * @param {HTMLElement} richter The editor\n     */\n    createEditor(richter) {\n        //create a toolbar for the editor\n        let richterToolbar = document.createElement('div');\n        richterToolbar.id = 'richter-toolbar';\n        //create the editor page\n        let richterPage = document.createElement('div');\n        richterPage.id = 'richter-page';\n        //make the page editable\n        richterPage.contentEditable = true;\n        //Set the grammarly editor to false. In case the user has the extension, it will be disabled.\n        richterPage.setAttribute('data-gramm_editor', 'false');\n\n        //add the elements to the editor\n        richter.appendChild(richterToolbar);\n        richter.appendChild(richterPage);\n\n        //add the default style\n        richter.style = `\n            min-width: 40em;\n            border: 1px solid rgb(240, 240, 240);\n            background: rgb(251, 251, 251);\n        `;\n\n        richterToolbar.style = `\n            background: rgb(243, 239, 239);\n            padding-bottom: 1px;\n        `;\n\n        richterPage.style = `\n            min-height: 50em;\n            padding: 5px;\n            background: white;\n            outline:none;\n        `;\n\n        //create the actual toolbar with all of the tools\n        this.createToolbar(richterToolbar);\n    }\n\n    /**\n     * Append buttons and menus to the toolbar\n     * @param {HTMLDivElement} richterToolbar Richter's toolbar\n     */\n    createToolbar(richterToolbar) {\n        //create and append buttons\n        richterToolbar.appendChild(this.createToolbarButtons());\n        //create and append menus\n        richterToolbar.appendChild(this.createToolbarMenus());\n    }\n\n    /**\n     * Create buttons for the toolbar based on the toolbarTools data\n     * @property {object} toolbarTools JSON containing all the tools rendered in the toollbar\n     * @returns {HTMLElement} The element containing all the buttons\n     */\n    createToolbarButtons() {\n        //create/append toolbar buttons\n        //create a div container for buttons\n        let buttonsBox = document.createElement('div');\n        buttonsBox.id = 'richter-toolbar-buttons';\n        toolbarTools.buttons.forEach(button => {\n            //create buttons\n            let btn = document.createElement('button');\n            btn.innerHTML = button.text.charAt(0).toLowerCase() + button.text.charAt(1).toLowerCase();\n            btn.title = button.text;\n\n            //add the default style\n            btn.style = `\n                cursor: pointer;\n                padding-left: 5px;\n                margin: 2px;\n                border: 1px solid grey;\n            `;\n\n            //append this button to the toolbar\n            buttonsBox.appendChild(btn);\n\n            //add the behavior of this button\n            btn.onclick = () => {\n                this.formatDocument(button.command);\n            };\n        });\n\n        return buttonsBox;\n    }\n\n    /**\n     * Create menus for the toolbar based on the toolbarTools data\n     * @property {object} toolbarTools JSON containing all the tools rendered in the toollbar\n     * @returns {HTMLElement} The element containing all the menus\n     */\n    createToolbarMenus() {\n        //create/append toolbar menus\n        //create a div container for menus\n        let menusBox = document.createElement('div');\n        menusBox.id = 'richter-toolbar-menus';\n        toolbarTools.menus.forEach(tool => {\n            let toolMenu = document.createElement('select');\n            //create a default option for the select\n            let defaultOption = document.createElement('option');\n            defaultOption.selected = true;\n            defaultOption.disabled = true;\n            defaultOption.innerText = tool.header;\n            //append the default option to the mneu\n            toolMenu.appendChild(defaultOption);\n            //grab all the other options\n            for(let value in tool.values) {\n                let option = document.createElement('option');\n                //set this value as the inner text\n                option.innerText = tool.values[value];\n                option.value = value;\n                //add the option to the menu\n                toolMenu.appendChild(option);\n            }\n\n            //add the behavior of this menu\n            toolMenu.onchange = () => {\n                //pass the tool command and this select element/option index value\n                //so that when the selected item/option is selected\n                //it value is used to format the document\n                this.formatDocument(tool.command, toolMenu[toolMenu.selectedIndex].value);\n            };\n\n            //append the menu to the toolbar\n            menusBox.appendChild(toolMenu);\n        });\n\n        return menusBox;\n    }\n\n    /**\n     * Handles cases where the direct use of execCommand is not possible\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/document/execCommand | MDN: Document.execCommand}\n     * @param {string} command The command to run using execCommand\n     * @param {string} value The value of the command\n     */\n    formatDocument(command, value) {\n        switch (command) {\n        case 'cleanDoc':\n            if(this.richterConfirm('Want to erase everything?', 'Yes', 'No')) {\n                console.log('true');\n                //grab the editor's page\n                let richterPage = document.getElementById('richter-page');\n                richterPage.innerHTML = '';\n            }\n            break;\n        case 'printDoc': this.printPage(); break;\n        default: document.execCommand(command, false, value);\n        }\n    }\n\n    /**\n     * Print the contents of the page\n     */\n    printPage() {\n        /**\n         * ALlow window print without any new wrapper window\n         * Richter css defines a media query @media print\n         * that alows only the richter page to be printed.\n         *\n         * For the overall website, the main style needs also a media query\n         * that removes anything extra that might be printed\n         *\n         * Or just go ahead and implement a new wrapper window for print\n         * window.open and window.write and add onload=window.print in the body tag\n         */\n        window.print();\n    }\n\n    // ***************************\n    //    SESION STORAGE\n    // ***************************\n\n    /**\n     * Save the state of an element in the session storage\n     * @param {string} sName Session storage key\n     * @param {string} sValue Session storage value\n     */\n    _SSsaveState(sName, sValue) {\n        //use session storage to store the state of the editor\n        window.sessionStorage.setItem(sName, sValue);\n    }\n\n    /**\n     * Get the state of an element from the session storage\n     * @param {string} sName Name of the item to read from the session storage\n     * @returns {(string|number)} The value of the item read or -1 if no value found\n     */\n    _SSgetState(sName) {\n        //get the state of an element\n        //verify if the session exists\n        if(window.sessionStorage.getItem(sName)) {\n            //return the value if it exists\n            return window.sessionStorage.getItem(sName);\n        }\n        //return -1 to indicate that the state does not exist\n        return -1;\n    }\n\n    /**\n     * Autosave the page in the session storage\n     * @param {Boolean} _SSenable Enable page autosave by default\n     */\n    _SSpageAutoSave(_SSenable = true) {\n        if(_SSenable) {\n            //get the editor's page\n            let richterPage = document.getElementById('richter-page');\n            //listen for any change on input\n            richterPage.oninput = () => {\n                this._SSsaveState('page', richterPage.innerHTML);\n            };\n        }\n        //Read the data back after saving it\n        //this is safe to do since this function only runs once\n        //a read from session storange is only done on loads\n        this._SSread();\n    }\n\n    /**\n     * Read session storage data\n     */\n    _SSread() {\n        //Check for page session data\n        let richterPage = document.getElementById('richter-page');\n        let _SSpage = this._SSgetState('page');\n        if(_SSpage !== -1) richterPage.innerHTML = _SSpage;\n    }\n\n    // ***************************\n    //    EXTRA EXTRA\n    // ***************************\n\n    /**\n     * Richter own confirm box\n     * @param {string} message What to show in the confirm box\n     * @param {string} btn1Label Label on the first button\n     * @param {string} btn2Label Label on the second button\n     * @returns {Boolean} True from btn1 and false for btn2\n     */\n    richterConfirm(message, btn1Label, btn2Label) {\n        //create the confirm box\n        let confirmBox = document.createElement('div');\n        confirmBox.classList.add('confirm');\n        confirmBox.innerHTML = `\n        <p id='confirm-msg'>${message}</p>\n        <div id='confirm-btns'>\n        <button id='confirm-acceptBtn'>${btn1Label}</button>\n        <button id='confirm-denyBtn'>${btn2Label}</button>\n        </div>\n        `;\n        //append to the body of the document\n        document.body.appendChild(confirmBox);\n        //find the confirm box on the body\n        //by accessing the last child element\n        let confirmBoxBtns = document.body\n            .children[document.body.children.length - 1]\n            .children[1];\n\n        //grab the buttons\n        let btn1 = confirmBoxBtns.children[0];\n        let btn2 = confirmBoxBtns.children[1];\n\n        let ret;\n\n        //listen for button clicks and return\n        btn1.onclick = () => {\n            ret = true;\n        };\n        btn2.onclick = () => {\n            ret = false;\n        };\n\n        return ret;\n    }\n}\n\n//export Richter as a class\nmodule.exports = Richter;\n"],"sourceRoot":""}